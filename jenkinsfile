pipeline {
    agent any
    environment {
        scannerHome = tool 'sonar'
    }
    tools {
        maven 'jenkinsmaven'
        jdk 'Java17'
    }

    stages {
        stage('Demount'){
            steps{
                sh 'docker stop proyectofinal || true &&  docker rm proyectofinal || true'
       
            }
        }
        stage('Build') {
            steps {
                echo 'Construyendo la aplicacion'
                sh 'mvn clean package'
            }
        }
        stage('Test') {
            steps {
            	echo 'Ejecutando los tests '
            	sh 'mvn test'
				echo 'Finalizado los tests '
            }
        }
        // stage('SonarScan'){
        //     steps{
        //     withSonarQubeEnv(installationName: 'sonar'){
        //     sh "${scannerHome}/bin/sonar-scanner \
        //         mvn sonar:sonar \
        //         -Dsonar.projectKey=PtoyectoFinal \
        //         -Dsonar.host.url=http://192.168.80.1:9000 \
        //         -Dsonar.login=7519d0a385eef0af39282866a4f67747bf47c5fb"
        //     }
        //     }
        // }

        stage('Sonar Scanner') {
            steps {
                withSonarQubeEnv('sonar'){
                    script {
                        def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                        withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
                        sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://SonarQube:9000 -Dsonar.login=${sonarLogin} -Dsonar.projectName=PtoyectoFinal -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=GS -Dsonar.sources=src/main/java/com/kibernumacademy/devops -Dsonar.tests=src/test/java/com/kibernumacademy/devops -Dsonar.language=java -Dsonar.java.binaries=."
                    }
                    }
                }
            }
        }






        stage('Build and Run docker'){
            steps{
                sh 'docker build -t proyectofinal .'
                sh 'docker run -d -p 9090:9090 --name proyectofinal proyectofinal'
                sh 'docker tag proyectofinal calegria27/proyectofinal:latest'
            }
        }
        stage('Docker push'){
            steps{
                echo 'Push a DockerHub'
                sh 'docker login'
                sh 'docker push calegria27/proyectofinal:latest'
            }
        }
    }
}
 